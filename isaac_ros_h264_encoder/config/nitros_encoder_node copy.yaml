%YAML 1.2
# SPDX-FileCopyrightText: NVIDIA CORPORATION & AFFILIATES
# Copyright (c) 2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
---
name: color_converter
components:
- name: data_receiver
  type: nvidia::gxf::DoubleBufferReceiver
  parameters:
    capacity: 12
- type: nvidia::gxf::MessageAvailableSchedulingTerm
  parameters:
    receiver: data_receiver
    min_size: 1
- name: data_transmitter
  type: nvidia::gxf::DoubleBufferTransmitter
  parameters:
    capacity: 12
- type: nvidia::gxf::DownstreamReceptiveSchedulingTerm
  parameters:
    transmitter: data_transmitter
    min_size: 1
- name: pool
  type: nvidia::gxf::BlockMemoryPool
  parameters:
    storage_type: 1
    block_size: 6278400
    num_blocks: 40
- name: color_converter_operator
  type: nvidia::isaac::tensor_ops::StreamConvertColorFormat
  parameters:
    output_type: "NV12"
    receiver: data_receiver
    transmitter: data_transmitter
    pool: pool
    input_adapter: global/adapter
    output_adapter: global/adapter
    output_name: "image"
    stream: global/stream
- type: nvidia::gxf::MemoryAvailableSchedulingTerm
  parameters:
    allocator: pool
    min_blocks: 1
---
name: global
components:
- name: adapter
  type: nvidia::isaac::tensor_ops::ImageAdapter
  parameters:
    message_type: "VideoBuffer"
- name: stream
  type: nvidia::isaac::tensor_ops::TensorStream
  parameters:
    backend_type: "VPI"
    engine_type: "GPU"
- name: encoder_context
  type: nvidia::gxf::VideoEncoderContext
  parameters:
    scheduling_term: encoder_response/async_st
---
name: encoder
components:
- name: data_receiver
  type: nvidia::gxf::DoubleBufferReceiver
  parameters:
    capacity: 1
- type: nvidia::gxf::MessageAvailableSchedulingTerm
  parameters:
    receiver: data_receiver
    min_size: 1
- name: encoder_request
  type: nvidia::gxf::VideoEncoderRequest
  parameters:
    input_frame: data_receiver
    inbuf_storage_type: 1
    profile: 0
    qp: 20
    hw_preset_type: 0
    input_width: 1920
    input_height: 1080
    input_format: nv12
    config: pframe_cqp
    iframe_interval: 5
    rate_control_mode: 0
    videoencoder_context: global/encoder_context
---
name: encoder_response
components:
- name: output
  type: nvidia::gxf::DoubleBufferTransmitter
  parameters:
    capacity: 1
- type: nvidia::gxf::DownstreamReceptiveSchedulingTerm
  parameters:
    transmitter: output
    min_size: 1
- name: pool
  type: nvidia::gxf::BlockMemoryPool
  parameters:
    storage_type: 0
    block_size: 6912000
    num_blocks: 40
- type: nvidia::gxf::VideoEncoderResponse
  parameters:
    videoencoder_context: global/encoder_context
    output_transmitter: output
    outbuf_storage_type: 0
    pool: pool
- name: async_st
  type: nvidia::gxf::AsynchronousSchedulingTerm
- type: nvidia::gxf::MemoryAvailableSchedulingTerm
  parameters:
    allocator: pool
    min_blocks: 1
---
name: sink
components:
- name: signal
  type: nvidia::gxf::DoubleBufferReceiver
  parameters:
    capacity: 1
- type: nvidia::gxf::MessageAvailableSchedulingTerm
  parameters:
    receiver: signal
    min_size: 1
- name: sink
  type: nvidia::isaac_ros::MessageRelay
  parameters:
    source: signal
    max_waiting_count: 1
    drop_waiting: false
---
name: connections
components:
- type: nvidia::gxf::Connection
  parameters:
    source: color_converter/data_transmitter
    target: encoder/data_receiver
- type: nvidia::gxf::Connection
  parameters:
    source: encoder_response/output
    target: sink/signal
---
components:
- name: clock
  type: nvidia::gxf::RealtimeClock
- type: nvidia::gxf::EventBasedScheduler
  parameters:
    clock: clock
    stop_on_deadlock: false
- type: nvidia::gxf::JobStatistics
  parameters:
    clock: clock